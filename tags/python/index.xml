<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Spencer Lyon</title>
    <link>http://spencerlyon.com/tags/python/</link>
    <description>Recent content in Python on Spencer Lyon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>spencer.lyon@stern.nyu.edu (Spencer Lyon)</managingEditor>
    <webMaster>spencer.lyon@stern.nyu.edu (Spencer Lyon)</webMaster>
    <copyright>(c) 2015-2017 Spencer Lyon.</copyright>
    <lastBuildDate>Wed, 07 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://spencerlyon.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Canonical Probability distributions in Python</title>
      <link>http://spencerlyon.com/2015/01/07/canonical-probability-distributions-in-python/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 +0000</pubDate>
      <author>spencer.lyon@stern.nyu.edu (Spencer Lyon)</author>
      <guid>http://spencerlyon.com/2015/01/07/canonical-probability-distributions-in-python/</guid>
      <description>Distributions.jl I often need to use probability distributions in my work and research. Julia has an excellent package, Distributions.jl, for representing many common probability distributions. The three main features I like from this package are
 Excellent documentation where they clearly specify the methods available to each probability distribution as well as the parameterization used to define the pdf Canonical parameterizations for all distributions. By canonical I mean the form of the pdf you would find on the Wikipedia page for a particular distribution or open up a standard reference like Bayesian Data Analysis (Gelman, 2013) A consistent interface to all distributions of the same type.</description>
    </item>
    
  </channel>
</rss>